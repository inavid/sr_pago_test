{"version":3,"sources":["Search/index.js","Map/index.js","Header/index.js","Results/index.js","App.js","serviceWorker.js","index.js"],"names":["Search","state","state_selected","states","municipio_selected","municipios","postal_code_selected","postalCodes","submitable","handleChange","event","_this","filter","row","target","value","d_estado","setState","id","this","loadMunicipios","fetch","concat","then","res","json","data","catch","console","log","handleMunicipiosChange","D_mnpio","loadPostalCodes","handlePostalChange","d_codigo","_this2","c_estado","_this3","react_default","a","createElement","Form","className","FormGroup","Label","for","sm","Col","Input","type","name","onChange","map","key","municipio","postalCode","Button","color","size","block","onClick","props","onClickSubmitButton","React","Component","AnyReactComponent","_ref","text","Badge","Map","style","height","width","lib_default","bootstrapURLKeys","center","zoom","infoGasolinas","length","Map_AnyReactComponent","_id","lat","latitude","lng","longitude","regular","Header","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","isOpen","Navbar","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","Results","Table","responsive","hover","scope","calle","rfc","premium","numeropermiso","App","alert","success","results","parseFloat","Container","src_Header","Row","xs","src_Search","src_Map","src_Results","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mZAoJeA,6MA/IbC,MAAQ,CACNC,eAAgB,GAChBC,OAAQ,GACRC,mBAAoB,GACpBC,WAAY,GACZC,qBAAsB,GACtBC,YAAa,GACbC,YAAY,KAedC,aAAe,SAACC,GACd,IAAIR,EAAiBS,EAAKV,MAAME,OAAOS,OAAO,SAACC,GAC7C,OAAOH,EAAMI,OAAOC,QAAUF,EAAIG,WAEpCd,EAAiBA,EAAe,GAChCS,EAAKM,SAAS,CAACf,eAAgBA,EAAegB,IAAK,WACjDC,KAAKC,sBAITA,eAAiB,WACbC,MAAK,2CAAAC,OAA4CX,EAAKV,MAAMC,iBAC3DqB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACLf,EAAKM,SAAS,CACZb,mBAAoBsB,EAAK,GAAGR,GAC5Bb,WAAYqB,MAGfC,MAAMC,QAAQC,QAGnBC,uBAAyB,SAACpB,GACxB,IAAIN,EAAqBO,EAAKV,MAAMI,WAAWO,OAAO,SAACC,GACrD,OAAOH,EAAMI,OAAOC,QAAUF,EAAIkB,UAEpC3B,EAAqBA,EAAmB,GACxCO,EAAKM,SAAS,CAACb,mBAAoBA,EAAmBc,IAAK,WACzDC,KAAKa,uBAITA,gBAAkB,WAChBX,MAAK,4CAAAC,OAA6CX,EAAKV,MAAMG,qBAC5DmB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACLf,EAAKM,SAAS,CACZX,qBAAsBoB,EAAK,GAAGR,GAC9BX,YAAamB,MAGhBC,MAAMC,QAAQC,QAGjBI,mBAAqB,SAACvB,GACpB,IAAIJ,EAAuBK,EAAKV,MAAMM,YAAYK,OAAO,SAACC,GACxD,OAAOH,EAAMI,OAAOC,QAAUF,EAAIqB,WAEpC5B,EAAuBA,EAAqB,GAC5CK,EAAKM,SAAS,CACZX,qBAAsBA,EAAqB4B,kOA7DvCb,MAAM,4CACTE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACLS,EAAKlB,SAAS,CACZf,eAAgBwB,EAAK,GAAGU,SACxBjC,OAAQuB,MAGXC,MAAMC,QAAQC,mIAyDV,IAAAQ,EAAAlB,KACP,OACEmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAW,aACfJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAW9B,KAAG,GACZyB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,IAAI,SAASC,GAAI,GAAxB,UACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKD,GAAI,IACPR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,KAAK,SAASC,KAAK,SAAShC,GAAG,SAASiC,SAAUhC,KAAKV,cAE3DU,KAAKlB,MAAME,OACVgB,KAAKlB,MAAME,OAAOiD,IAAI,SAACnD,GACrB,OAAOqC,EAAAC,EAAAC,cAAA,UACGtB,GAAIjB,EAAMmC,SACViB,IAAKpD,EAAMmC,UACXnC,EAAMe,YAElB,QAKRsB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAW9B,KAAG,GACZyB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,IAAI,YAAYC,GAAI,GAA3B,aACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKD,GAAI,IACPR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,KAAK,SAASC,KAAK,YAAYhC,GAAG,YAAYiC,SAAUhC,KAAKW,wBAEjEX,KAAKlB,MAAMI,WACVc,KAAKlB,MAAMI,WAAW+C,IAAI,SAACE,GACzB,OAAOhB,EAAAC,EAAAC,cAAA,UACGtB,GAAIoC,EAAUpC,GACdmC,IAAKC,EAAUpC,IACfoC,EAAUvB,WAEtB,QAKRO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAW9B,KAAG,GACZyB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,IAAI,aAAaC,GAAI,GAA5B,oBACAR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKD,GAAI,IACPR,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOC,KAAK,SAASC,KAAK,aAAahC,GAAG,aAAaiC,SAAUhC,KAAKc,oBAEnEd,KAAKlB,MAAMM,YACVY,KAAKlB,MAAMM,YAAY6C,IAAI,SAACG,GAC1B,OAAOjB,EAAAC,EAAAC,cAAA,UACGtB,GAAIqC,EAAWrC,GACfmC,IAAKE,EAAWrC,IAChBqC,EAAWrB,YAEvB,QAKRI,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,KACLC,OAAK,EACLC,QAAS,WAAKvB,EAAKwB,MAAMC,oBAAoBzB,EAAKpC,MAAMK,wBAJ1D,kBAnIayD,IAAMC,oCCArBC,EAAoB,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KAC1B,OACE7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOX,MAAM,QACVU,KAmCME,mLA3BX,OACE/B,EAAAC,EAAAC,cAAA,OAAK8B,MAAO,CAAEC,OAAQ,OAAQC,MAAO,SACnClC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,iBAAkB,CAAErB,IAAK,2CACzBsB,OAAQxD,KAAK0C,MAAMc,OACnBC,KAAMzD,KAAK0C,MAAMe,MAGdzD,KAAK0C,MAAMgB,cAAcC,OAAS,EACjC3D,KAAK0C,MAAMgB,cAAczB,IAAI,SAACvC,GAC5B,OACEyB,EAAAC,EAAAC,cAACuC,EAAD,CACE1B,IAAKxC,EAAImE,IACTC,IAAKpE,EAAIqE,SACTC,IAAKtE,EAAIuE,UACTjB,KAAM,KAAKtD,EAAIwE,YAIrB,cArBIrB,oEC6BHsB,cAhCb,SAAAA,EAAYzB,GAAO,IAAAlD,EAAA,OAAA4E,OAAAC,EAAA,EAAAD,CAAApE,KAAAmE,IACjB3E,EAAA4E,OAAAE,EAAA,EAAAF,CAAApE,KAAAoE,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAxE,KAAM0C,KAED+B,OAASjF,EAAKiF,OAAOC,KAAZN,OAAAO,EAAA,EAAAP,CAAA5E,IACdA,EAAKV,MAAQ,CACX8F,QAAQ,GALOpF,wEASjBQ,KAAKF,SAAS,CACZ8E,QAAS5E,KAAKlB,MAAM8F,0CAItB,OACIzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAQvC,MAAM,OAAOwC,OAAO,KAAKvD,UAAW,UAC1CJ,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,KAAK,IACLzD,UAAW,gBAFb,YAMAJ,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAexC,QAASzC,KAAKyE,SAC7BtD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUN,OAAQ5E,KAAKlB,MAAM8F,OAAQO,QAAM,GACzChE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAK7D,UAAU,UAAU4D,QAAM,aAzBtBvC,IAAMC,mBC8BZwC,mLAnCX,OACKrF,KAAK0C,MAAMgB,cAAcC,OAAS,EAC/BxC,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,GACnBrE,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,uBAGJF,EAAAC,EAAAC,cAAA,aAEIrB,KAAK0C,MAAMgB,cAAczB,IAAI,SAACvC,GAC1B,OACIyB,EAAAC,EAAAC,cAAA,MAAIa,IAAKxC,EAAImE,KACT1C,EAAAC,EAAAC,cAAA,MAAIoE,MAAM,OAAO/F,EAAImE,KACrB1C,EAAAC,EAAAC,cAAA,UAAK3B,EAAIgG,OACTvE,EAAAC,EAAAC,cAAA,UAAK3B,EAAIiG,KACTxE,EAAAC,EAAAC,cAAA,UAAK,KAAK3B,EAAIwE,SACd/C,EAAAC,EAAAC,cAAA,UAAK,KAAK3B,EAAIkG,SACdzE,EAAAC,EAAAC,cAAA,UAAK3B,EAAImG,oBAO/B,YAhCYjD,IAAMC,WCsEbiD,6MA/DbhH,MAAQ,CACN4E,cAAe,GACfF,OAAQ,CACNM,IAAK,WACLE,KAAM,YAERP,KAAM,MAGRd,oBAAsB,SAACP,GACrB,IAAIA,EAEF,OADA2D,MAAM,qCACC,EAET7F,MAAK,sCAAAC,OAAuCiC,IAC3ChC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GACFA,EAAKyF,SACNxG,EAAKM,SAAS,CACZ4D,cAAenD,EAAK0F,QACpBzC,OAAQ,CACNM,IAAKoC,WAAW3F,EAAK0F,QAAQ,GAAGlC,UAChCC,IAAKkC,WAAW3F,EAAK0F,QAAQ,GAAGhC,gBAKvCzD,MAAMC,QAAQC,8EAIf,OACES,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAK0E,GAAG,IAAI3E,GAAG,KACbR,EAAAC,EAAAC,cAACkF,EAAD,CACE5D,oBAAqB3C,KAAK2C,uBAG9BxB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAK0E,GAAG,IAAI3E,GAAG,KACbR,EAAAC,EAAAC,cAACmF,EAAD,CACE9C,cAAe1D,KAAKlB,MAAM4E,cAC1BF,OAAQxD,KAAKlB,MAAM0E,OACnBC,KAAMzD,KAAKlB,MAAM2E,SAIvBtC,EAAAC,EAAAC,cAACgF,EAAA,EAAD,KACElF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAK0E,GAAG,MACNnF,EAAAC,EAAAC,cAACoF,EAAD,CACE/C,cAAe1D,KAAKlB,MAAM4E,2BAtDxBd,IAAMC,WCIJ6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAO7F,EAAAC,EAAAC,cAAC4F,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlH,KAAK,SAAAmH,GACjCA,EAAaC","file":"static/js/main.0b0943b2.chunk.js","sourcesContent":["import React from 'react';\nimport './search.css';\nimport { Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nclass Search extends React.Component {\n  state = {\n    state_selected: \"\",\n    states: [],\n    municipio_selected: \"\",\n    municipios: [],\n    postal_code_selected: \"\",\n    postalCodes: [],\n    submitable: false\n  }\n  \n  async componentDidMount() {\n    await fetch('http://localhost/api/sepomex?group=state')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          state_selected: data[0].c_estado,\n          states: data \n        })\n      })\n      .catch(console.log)\n  }\n\n  handleChange = (event) => {\n    let state_selected = this.state.states.filter((row)=>{\n      return event.target.value === row.d_estado\n    });\n    state_selected = state_selected[0];\n    this.setState({state_selected: state_selected.id}, function () {\n      this.loadMunicipios();\n    });\n  }\n\n  loadMunicipios = () => {\n      fetch(`http://localhost/api/sepomex/municipios/${this.state.state_selected}`)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({\n          municipio_selected: data[0].id,\n          municipios: data \n        })\n      })\n      .catch(console.log)\n  }\n\n  handleMunicipiosChange = (event) => {\n    let municipio_selected = this.state.municipios.filter((row)=>{\n      return event.target.value === row.D_mnpio\n    });\n    municipio_selected = municipio_selected[0];\n    this.setState({municipio_selected: municipio_selected.id}, function () {\n      this.loadPostalCodes();\n    });\n  }\n\n  loadPostalCodes = () => {\n    fetch(`http://localhost/api/sepomex/postalCodes/${this.state.municipio_selected}`)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({\n        postal_code_selected: data[0].id,\n        postalCodes: data \n      })\n    })\n    .catch(console.log)\n  }\n\n  handlePostalChange = (event) => {\n    let postal_code_selected = this.state.postalCodes.filter((row)=>{\n      return event.target.value === row.d_codigo\n    });\n    postal_code_selected = postal_code_selected[0];\n    this.setState({\n      postal_code_selected: postal_code_selected.d_codigo,\n    });\n  }\n  \n  render() {\n    return (\n      <Form className={\"formulary\"}>\n        <FormGroup row>\n          <Label for=\"estado\" sm={2}>Estado</Label>\n          <Col sm={10}>\n            <Input type=\"select\" name=\"estado\" id=\"estado\" onChange={this.handleChange}>\n            {\n              (this.state.states) ?\n                this.state.states.map((state) => {\n                  return <option \n                            id={state.c_estado}\n                            key={state.c_estado}\n                          >{state.d_estado}</option>\n                })\n              : null\n            }\n            </Input>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"municipio\" sm={2}>Municipio</Label>\n          <Col sm={10}>\n            <Input type=\"select\" name=\"municipio\" id=\"municipio\" onChange={this.handleMunicipiosChange}>\n            {\n              (this.state.municipios) ?\n                this.state.municipios.map((municipio) => {\n                  return <option \n                            id={municipio.id}\n                            key={municipio.id}\n                          >{municipio.D_mnpio}</option>\n                })\n              : null\n            }\n            </Input>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"postalCode\" sm={2}>Código Postal</Label>\n          <Col sm={10}>\n            <Input type=\"select\" name=\"postalCode\" id=\"postalCode\" onChange={this.handlePostalChange}>\n            {\n              (this.state.postalCodes) ?\n                this.state.postalCodes.map((postalCode) => {\n                  return <option \n                            id={postalCode.id}\n                            key={postalCode.id}\n                          >{postalCode.d_codigo}</option>\n                })\n              : null\n            }\n            </Input>\n          </Col>\n        </FormGroup>\n        <Button \n          color=\"secondary\" \n          size=\"lg\" \n          block\n          onClick={()=>{this.props.onClickSubmitButton(this.state.postal_code_selected)}}\n        >\n          Search\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Badge } from 'reactstrap';\n \nconst AnyReactComponent = ({text}) => {\n  return(\n    <div>\n      <Badge color=\"dark\">\n        {text}\n      </Badge>\n    </div>\n  )\n};\n \nclass Map extends Component {\n  render() {\n    return (\n      <div style={{ height: '50vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"AIzaSyDG1Qrdk6PRv7CS-N88YK-99zO1i-KP-lA\" }}\n          center={this.props.center}\n          zoom={this.props.zoom}\n        >\n          {\n            (this.props.infoGasolinas.length > 0) ?\n              this.props.infoGasolinas.map((row)=>{\n                return(\n                  <AnyReactComponent\n                    key={row._id}\n                    lat={row.latitude}\n                    lng={row.longitude}\n                    text={\"$ \"+row.regular}\n                  />\n                )\n              })\n            : null\n          }\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n \nexport default Map;","import React from 'react';\nimport './header.css';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav\n} from 'reactstrap';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n        <Navbar color=\"dark\" expand=\"md\" className={\"header\"}>\n          <NavbarBrand \n            href=\"/\" \n            className={\"header-title\"}\n          >\n            Sr. Pago\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n            </Nav>\n          </Collapse>\n        </Navbar>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport { Table } from 'reactstrap';\n\nclass Results extends React.Component {\n  render() {\n    return (\n        (this.props.infoGasolinas.length > 0) ?\n            <Table responsive hover>\n                <thead>\n                <tr>\n                    <th>Id</th>\n                    <th>Calle</th>\n                    <th>RFC</th>\n                    <th>Precio regular</th>\n                    <th>Precio premium</th>\n                    <th>Permiso</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    this.props.infoGasolinas.map((row)=> {\n                        return (\n                            <tr key={row._id}>\n                                <th scope=\"row\">{row._id}</th>\n                                <td>{row.calle}</td>\n                                <td>{row.rfc}</td>\n                                <td>{\"$ \"+row.regular}</td>\n                                <td>{\"$ \"+row.premium}</td>\n                                <td>{row.numeropermiso}</td>\n                            </tr>\n                        )\n                    })\n                }\n                </tbody>\n            </Table>\n        : null\n    );\n  }\n}\n\nexport default Results;","import React from 'react';\nimport './App.css';\nimport { Container, Row, Col } from 'reactstrap';\nimport Search from './Search/index'\nimport Map from './Map/index'\nimport Header from './Header/'\nimport Results from './Results/'\n\nclass App extends React.Component {\n\n  state = {\n    infoGasolinas: [],\n    center: {\n      lat: 19.4179232,\n      lng: -99.1505714\n    },\n    zoom: 14\n  }\n\n  onClickSubmitButton = (postalCode) => {\n    if(!postalCode) {\n      alert(\"You need to select a postal code\");\n      return false;\n    }\n    fetch(`http://localhost/api/external-data/${postalCode}`)\n    .then(res => res.json())\n    .then((data) => {\n      if(data.success) {\n        this.setState({\n          infoGasolinas: data.results,\n          center: {\n            lat: parseFloat(data.results[0].latitude),\n            lng: parseFloat(data.results[0].longitude)\n          }\n        })\n      }\n    })\n    .catch(console.log)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Header />\n          <Row>\n            <Col xs=\"6\" sm=\"6\">\n              <Search \n                onClickSubmitButton={this.onClickSubmitButton}\n              />\n            </Col>\n            <Col xs=\"6\" sm=\"6\">\n              <Map \n                infoGasolinas={this.state.infoGasolinas}\n                center={this.state.center}\n                zoom={this.state.zoom}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Results \n                infoGasolinas={this.state.infoGasolinas} \n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}